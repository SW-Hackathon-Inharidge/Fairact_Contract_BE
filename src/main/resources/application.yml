spring:
  application:
    name: Fairact_Contract_BE

  config:
    import: optional:file:.env[.properties]

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URI}
            scope:
              - email
              - profile
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope:
              - profile
              - account_email
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
          kakao:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me


  data:
    redis:
      client-type: lettuce
      username: default
      password: ${REDIS_PASSWORD}
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      timeout: 7200s

    mongodb:
      uri: ${MONGO_URI}

  mail:
    host: ${EMAIL_HOST}
    port: ${EMAIL_PORT}
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_APP_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace

minio:
  access-key: ${MINIO_DASHBOARD_USER}
  secret-key: ${MINIO_DASHBOARD_PASSWORD}
  url: ${MINIO_STORAGE_URL}
  public-url: ${MINIO_PUBLIC_STORAGE_URL}
  bucket: ${MINIO_BUCKET_NAME}

jwt:
  secret: "testtesttesttesttesttesttesttesttest"
  access-token-validity-in-seconds: 2